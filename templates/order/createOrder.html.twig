{% extends 'base.html.twig' %}

{% block body %}
{# <style>
    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
</style> #}
<div class="gradient-bg">
  <div class="container w-100 h-100">
    <div class="d-flex flex-column pt-3 w-100 mh-100 h-100">
    <div class="d-flex justify-content-between align-items-center" style="margin-top:3.5rem; margin-bottom:1.5rem;">
        <div class="d-flex flex-column gap-1">
          <h3 class="mb-0">Crear Pedido</h3>
          <p class="text-secondary mb-0" style="font-size: .9rem">Seleccione qué insumos se necesitan y su correspondiente cantidad.</p>
        </div>
        <div class="d-flex justify-content-end gap-2" >
          <a href="{{ path('app_order') }}" style="font-size:.95rem;" class="btn btn-outline-dark p-1 rounded-1 fw-light"><i class="fa-regular fa-eye"></i> Pedidos</a>
          <a href="{{ path('app_home') }}" style="font-size:.95rem;" class="btn btn-outline-dark p-1 rounded-1 fw-light"><i class="fa-solid fa-arrow-left"></i> Inicio</a>
        </div>
      </div>
      <div style="height:65%; max-height:65%">
        <form id="elform" action="" method="post" class="d-flex gap-3 mh-100 h-100 ">
          <div class="w-75 h-100 d-flex justify-content-between bg-white p-4 rounded-3 border">
            <div class="d-flex flex-column w-100 h-100 overflow-auto px-3">
              <div class="d-flex justify-content-between gap-3">
                <div class="d-flex flex-column w-75" >
                  <p for="producto" class="d-block fw-light mb-1">Añadir Productos</p>
                  <div id="product-input-div" style="position: relative;">
                    <select required onfocus="oldValue(this.value)" onchange="updateArray(this)" name="producto[]" class="my-1 p-1 w-100 fw-light products" style="border-top:none; border-left:none; border-right:none; border-bottom: 1px solid grey; outline:none; font-size: .9rem; z-index:1; " id="firstSelect">
                        <option value="" style="color:gray;">Seleccione un producto</option>
                        {% for producto in productos %}
                          <option value="{{producto.id}}" style="z-index:-1">{{producto.name}}</option>
                        {% endfor %}
                    </select>
                  </div>   
                </div>
                <div class="d-flex flex-column w-25" id="quantity-input-div">
                  <p for="producto" class="d-block mb-1 fw-light">Seleccionar Cantidad</p>
                  <input required type="number" name="cantidad[]" class="my-1 p-1 quantitys" min="0" style="border-top:none; border-left:none; border-right:none; outline:none;border-bottom: 1px solid grey; font-size:.9rem; height:29px;">
                </div>
              </div>
              <p id="messageText" style="font-size: .85rem;" class="text-secondary mb-0"></p>
              <p type="button" id="buttonAdd" class="stylized-btn mt-2">Agregar otro producto</p>
            </div>
          </div>
          <div class="d-flex flex-column w-25 gap-2 bg-white p-4 rounded-3 border">
              <div class="d-flex gap-2">
                <p for="memo" class="d-block mb-1 fw-light">Añadir memo</p>
                <div id="count">
                  <span id="current_count">0</span>
                  <span id="maximum_count">/ 250</span>
                </div>
              </div>
              <textarea class="form-control rounded-1 h-100" name="memo" id="texto" maxlength="250" placeholder="Agregar memo (notificar cambios de productos, aclaraciones)" style="background-color:transparent; border-color:gray;"></textarea>
              <input  style="font-size:.95rem;" type="submit" value="Submit"  class="btn btn-outline-primary"/>
          </div>
        </form>
      </div>
      <div class="d-flex flex-column text-secondary pt-3 pb-0" style="font-size: .85rem;">
    <div class="d-flex align-items-center gap-2">
      <i class="dot"></i>
      <p class="mb-0">Ayuda:</p>
    </div>
    <p class="mb-0 ms-3">- Si pretende solicitar un producto pero se permite recibir otro, especificar en memo. (Ej: solicité un insumo de X laboratorio pero me permito recibir de algún otro)</p>
    <p class="mb-0 ms-3">- No duplicar productos en el pedido.</p>
    <p class="mb-0 ms-3">- Para agregar un producto es necesario completar los campos anteriores primero.</p>
  </div>
    </div>
  </div>
</div>
  <script type="text/javascript">
    var updatedProducts = [];
    var selectedValues = [];
    var previousValue;

    function oldValue(value){
      let filter = document.getElementById('searchInput1');
      previousValue = value;
      console.log('VALOR ANTERIOR: ', previousValue)
    }

    var products = [];
    function allProducts(){
      fetch(`/api/allProducts`)
      .then(response => response.json())
      .then(data => {
        products = data;
        updatedProducts = data;
      })
      .catch(error => {
        console.error('Error fetching products list:', error);
      });
    }
    window.onload = allProducts();

    function valuesAreSetted(){
      const products = document.querySelectorAll('.products');
      let productBool = false;
      const quantitys = document.querySelectorAll('.quantitys');
      let quantityBool = false;
      for (const product of products) {
        if (product.value.trim() === '') {
          productBool = false;
        } else {
          productBool = true;
        }
      }
      for (const quantity of quantitys) {
        if (quantity.value.trim() === '') {
          quantityBool = false;
        } else {
          quantityBool = true;
        }
      }
      if (quantityBool && productBool){
        return true
      } else {
        return false
      }
    }

    var selectElements = document.querySelectorAll('.products');
    let firstSelect = document.getElementById('firstSelect');
    firstSelect.onchange = function(){
      let selectedValue = firstSelect.value;
      newProduct = products.find((product)=> product.id == selectedValue);
      if (previousValue !== "") {
        oldProduct = products.find((product) => product.id == previousValue);
        console.log('Anterior producto del Select 1', oldProduct);
        selectedValues.splice(0,1,newProduct);
        updatedProducts.push(oldProduct);
      } else {
        selectedValues.splice(0,0,newProduct)
      }
      updatedProducts = updatedProducts.filter(
        function(e){
          return e.id != selectedValue;
        }
      );
      console.log(selectedValues);
      console.log(updatedProducts, 'Array de Productos disponibles');
      console.log(products);
      selectElements.forEach(function(select,idx) {
          console.log('ESTOY REMAPEANDO')
          select.innerHTML = `<select onfocus="oldValue(this.value)" required onclick="updateArray(this)" name="producto[]" class="p-1 w-100 fw-light my-1 products" style="border: 1px solid gray; font-size:.9rem; border-top:none; border-left:none; border-right:none; border-bottom: 1px solid grey; outline:none;"> ${updatedProducts.map((e,idx)=>`<option value="${e.id}">${e.name}</option>`)}<option value="${selectedValues[idx].id}" selected>${selectedValues[idx].name}</option></select>`
        })
    }

function updateArray(selectElement){
    selectElements = document.querySelectorAll('.products');
      selectElement.onchange = function() {
        // Get the selected value
        let selectedValue = selectElement.value;
        newProduct = products.find((product) => product.id == selectedValue);
        
        if (previousValue !== "") {
          oldProduct = products.find((product) => product.id == previousValue);
          console.log(oldProduct, 'PRODUCTO ANTERIOR')
          let index = selectedValues.findIndex(el => el.id === oldProduct.id);
          console.log('INDICE DE MI PRODUCTO ANTERIOR EN EL ARRAY DE PRODUCTOS SELECECIONADOS', index)
          //selectedValues = selectedValues.filter(function(element){
          //  return element.id != oldProduct.id;
          // })
          selectedValues.splice(index,1,newProduct)
          selectedValues.map((el)=>console.log(el.id))
          updatedProducts.push(oldProduct);
        } else {
          selectedValues.push(newProduct);
        }
        console.log(selectedValues, 'Productos Seleccionados')
        // Call the useData function with the selected value
        updatedProducts = updatedProducts.filter(
          function(element){
            // console.log(element, 'ELEMENTO')
            return element.id != selectedValue;
          }
        );
        console.log(updatedProducts, 'Array de Productos disponibles');
        console.log(products, 'Array de productos completos');
        selectElements.forEach(function(select,idx) {
          select.innerHTML = `<select onfocus="oldValue(this.value)" required onclick="updateArray(this)" name="producto[]" class="p-1 w-100 fw-light my-1 products" style="border: 1px solid gray; font-size:.9rem; border-top:none; border-left:none; border-right:none; border-bottom: 1px solid grey; outline:none;"> ${updatedProducts.map((e,idx)=>`<option value="${e.id}">${e.name}</option>`)}<option value="${selectedValues[idx].id}" selected>${selectedValues[idx].name}</option></select>`
        })
      }
  }
  function add(){
    $('#product-input-div').append(
    `<select required onclick="updateArray(this)" onfocus="oldValue(this.value)" name="producto[]" class="p-1 w-100 fw-light my-1 products" style="border: 1px solid gray; font-size:.9rem; border-top:none; border-left:none; border-right:none; border-bottom: 1px solid grey; outline:none;"><option value="" style="color:gray">Seleccione un producto</option> ${updatedProducts.map((e)=>`<option value="${e.id}">${e.name}</option>`)}</select>`);
    $('#quantity-input-div').append(
      '<input required type="number" name="cantidad[]" class="my-1 quantitys" style="border-top:none; border-left:none; border-right:none; border-bottom: 1px solid grey; outline:none; font-size:.9rem; height:29px;">'
    )
  }

  const buttonAdd = document.getElementById('buttonAdd');
  const messageText = document.getElementById('messageText');
  buttonAdd.addEventListener('click', () => {
    if (valuesAreSetted()) {
      messageText.innerHTML = '';
      add();
    } else {
      messageText.innerHTML = 'Completá la fila anterior para agregar otro producto al pedido.'
    }
  });

    // CONTADOR DE CHARACTERS PARA EL MEMO
    $('textarea').keyup(function() {    
    var characterCount = $(this).val().length,
        current_count = $('#current_count'),
        maximum_count = $('#maximum_count'),
        count = $('#count');
        current_count.text(characterCount);
    });
  </script>
{% endblock %}