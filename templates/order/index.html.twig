{% extends 'base.html.twig' %}

{% block title %}Pedidos | UMAD{% endblock %}

{% block body %}
  <div class="gradient-bg">
    <div class="container w-100 h-100" id="orders-div">
      <div class="w-100 h-100 d-flex flex-column index-order-div">
        <div class="d-flex justify-content-between align-items-center title-header-container">
          <div class="d-flex flex-column gap-1">
            <h3 class="mb-0">Historial de pedidos</h3>
            <p class="text-secondary mb-0 subtext-header">Detalle de pedidos pertenecientes al centro de salud: <span class="text-dark">{{app.user.healthCenter}}</a>.</p>
          </div>
          <div>
            <a href="{{ path('app_order_new') }}" class="btn btn-primary p-1"><i class="fa-solid fa-plus"></i> Pedido</a>
          </div>
        </div>
        <div class="table-responsive bg-white rounded-2 border overflow-hidden stylized-table">

          <table class="table table-hover mw-100">
            <thead>
              <tr class="custom-table-header">
                <th scope="col">#</th>
                <th class="sortable-item"><div class="d-flex">{{ knp_pagination_sortable(pagination, 'Creado', 'a.createdAt') }}</div></th>
                <th scope="col" class="memo-cell">Memo</th>
                <th scope="col">Usuario</th>
                <th class="sortable-item"><div class="d-flex">{{ knp_pagination_sortable(pagination, 'Estado', 'e.description') }}</div></th>
                <th scope="col">Ver orden</th>
              </tr>
            </thead>
            <tbody id="table-body">
              {% if pagination.items != null %}
                {% for order in pagination %} 
                  <tr class="table-body-text">
                    <td class="fw-light">{{ order.id }}</td>
                    <td class="fw-light">{{ order.createdAt | date("d/m/y h:i") }}</td>
                    <td class="fw-light memo-cell">{{ order.memo ? (order.memo|length > 50 ? order.memo|slice(0,50) ~ '...' : order.memo) : ('No se especificó memo') }}</td>
                    <td class="fw-light">{{ order.username }} {{order.userlastname}}</td>
                    <td class="fw-light">{{ order.status == 'Recibido' ? 'Enviado' : order.status}}</td>
                    <td>
                      <div class="d-flex gap-2 align-items-center">
                        <a href="{{ path('app_order_show', {'id': order.id}) }}" class="d-flex text-dark">Ver</a>
                        <a href="{{ path('pedidos_pdf', {'id': order.id}) }}" class="btn btn-outline-dark ps-1 pe-1 pt-0 pb-0 rounded-1" style="font-size:.8rem"><i class="fa-solid fa-arrow-down"></i> PDF</a>
                      </div>
                    </td>
                  </tr>
                {% endfor %}
              {# {% else %}
                <tr class="table-body-text w-100">
                  <p class="text-sm m-auto ">No se encontró ningún pedido. Puede ser que no se haya realizado ninguno o que no hay pedidos que cumplan con el filtro.</p>
                </tr> #}
              {% endif %}
            </tbody>
          </table>
        </div>
        <div class="d-flex justify-content-between mt-2">
          <div class="d-flex flex-column text-secondary pb-0 footer-text">
            <div class="d-flex align-items-center gap-2">
              <i class="dot"></i>
              <p class="mb-0">Ayuda:</p>
            </div>
            <p class="mb-0 ms-3">- En caso de querer cancelar un pedido, contactar con la administradora y solicitar un pedido nuevo.</p>
            <p class="mb-0 ms-3">- Por cuestiones de integridad de la información, no es posible editar los pedidos.</p>
          </div>
          {{knp_pagination_render(pagination)}}
        </div> 
      </div>
    </div>
  </div>

  {# {% block javascripts %}
    {{ parent() }}
       <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
      <script>
        // Funcion de filtro de pedidos basado en un Id que se triggerea con un botón y envía un id a mano.
        function getFilteredOrders(id){
          fetch(`/pedidos/filtrar/${id}`)
          .then(response => response.json())
          .then(data => {
              const filteredOrdersDiv = document.getElementById('table-body');
              const notification = document.getElementById('notification');
              filteredOrdersDiv.innerHTML='';
              // Code to display the list of data goes here
              if(data.length > 0){
                data.forEach(order => {
                  filteredOrdersDiv.innerHTML+=`<tr style="font-size:0.85rem"><td class="fw-light">${order.id}</td><td class="fw-light">${moment(order.created_at.date.slice(0,16)).format('DD/MM/YY hh:mm')}</td><td class="fw-light">${order.memo ? (order.memo.length>50 ? (order.memo.slice(0,47) + "...") : (order.memo) ) : ('No se especificó memo') }</td><td class="fw-light">${order.user}</td><td class="fw-light">${order.status == 'Recibido' ? 'Enviado' : order.status}</td><td><a href="/pedidos/${order.id}">ver</a></td></tr>`
                });
                console.log(data)
              } else {
                notification.innerHTML = '<p>No se encontró ningún pedido. Puede ser que no se haya realizado ninguno o que no hay pedidos que cumplan con el filtro.</p>'
              }
              
          })
          .catch(error => {
              console.error('Error fetching orders list:', error);
          });
        } 
      </script>
  {% endblock %}
#}
{% endblock %}